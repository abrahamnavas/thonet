'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.read = read;
exports.write = write;
exports.copy = copy;
const { dirname, extname } = require('path');
const fs = require('fs-extra');

const extension = exports.extension = filePath => extname(filePath).replace(/^\./, '');

const exists = exports.exists = filePath => {
  try {
    const stat = fs.statSync(filePath);
    return stat.isFile() || stat.isDirectory();
  } catch (err) {
    return false;
  }
};

const isDirectory = exports.isDirectory = filePath => {
  try {
    return fs.lstatSync(filePath).isDirectory();
  } catch (err) {
    return false;
  }
};

const invalidateRequireCache = exports.invalidateRequireCache = filePath => {
  delete require.cache[require.resolve(filePath)];
};

async function read(filePath) {
  const string = await fs.readFile(filePath, 'utf8');
  return string.trim();
}

async function write(filePath, content) {
  await fs.outputFile(filePath, content);
}

async function copy(src, dst) {
  const dir = dirname(dst);
  await fs.mkdirs(dir);
  await fs.copy(src, dst);
}

exports.default = {
  read,
  write,
  copy,
  extension,
  exists,
  isDirectory
};